{"version":3,"sources":["store/storeReducer.js","store/Store.js","Components/Navbar.js","Components/PrivateRoute.js","Utils/fetchApi.js","Components/Post.js","Components/Profile.js","Components/FormPost.js","Components/Loading.js","Components/Home.js","Pages/Login.js","Pages/Signup.js","App.js","serviceWorker.js","index.js"],"names":["initialState","post","user","name","token","error","onEdit","onProfile","id","loading","storeReducer","state","action","type","payload","StoreContext","createContext","StoreProvider","children","useReducer","dispatch","React","useEffect","localStorage","postToken","JSON","parse","username","Provider","value","useStore","useContext","useDispatch","Navbar","history","useHistory","className","exact","to","onClick","push","removeItem","PrivateRoute","Component","component","rest","render","props","localuser","getItem","pathname","URI","fetchApi","a","config","headers","axios","get","res","data","console","log","put","content","delete","Post","postname","like","index","useState","liked","setLiked","handleDelete","newposts","handleEdit","handleLike","some","_id","Profile","profile","setProfile","getmypost","posts","getpost","length","map","i","key","FormPost","form","setForm","setPostToEdit","postToEdit","handleCreate","newpost","onChange","e","target","placeholder","Loading","Home","Login","password","formLogin","setFormLogin","handleChange","newForm","handleLogin","message","setItem","stringify","Signup","passwordC","formSignup","setFormSignup","handleSignup","parload","paswordC","App","path","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.79bdd18f.chunk.js","sourcesContent":["export const initialState = {\r\n\tpost: [],\r\n\tuser: {name:\"\",token:\"\"},\r\n\terror: \"\",\r\n\tonEdit:\"\",\r\n\tonProfile: {id:\"\",name:\"\"},\r\n\tloading: false\r\n}\r\n\r\nexport const storeReducer = (state, action) => {\r\n\tswitch(action.type){\r\n\t\tcase \"SET_POST\":{\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpost: action.payload || []\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase \"SET_USER\":{\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuser: action.payload\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase \"SET_ERROR\":{\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\terror: action.payload\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase \"SET_ONEDIT\":{\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tonEdit: action.payload\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase \"SET_ONPROFILE\":{\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tonProfile: action.payload\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase \"SET_LOADING\":{\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: !state.loading\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n","import React, { createContext, useContext,useReducer } from 'react'\r\nimport { initialState, storeReducer } from './storeReducer'\r\n \r\nconst StoreContext = createContext()\r\n\r\n\r\nconst StoreProvider = ({ children }) => {\r\n\tconst [state, dispatch] = useReducer(storeReducer, initialState)\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif(localStorage.postToken){\r\n\t\t\tlet user = JSON.parse(localStorage.postToken)\r\n\t\t\tdispatch({type:\"SET_USER\",payload:user})\r\n\t\t}\r\n\t\tif(!localStorage.postToken){\r\n\t\t\tdispatch({type:\"SET_USER\",payload:{username:\"\", token:\"\"}})\r\n\t\t}\r\n\t},[])\r\n\r\n\r\n\treturn (\r\n\t\t<StoreContext.Provider value={[state,dispatch]} >\r\n\t\t\t{children}\r\n\t\t</StoreContext.Provider>\r\n\t)\r\n}\r\n\r\nconst useStore = () => useContext(StoreContext)[0]\r\nconst useDispatch = () => useContext(StoreContext)[1]\r\n\r\nexport {StoreProvider, StoreContext, useStore, useDispatch}","import React ,{useContext} from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport {useStore, useDispatch} from '../store/Store'\r\n\r\n\r\nexport const Navbar = () => {\r\n\r\n\tconst {user} = useStore()\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst history = useHistory()\r\n\r\n\tconst handleLogout = () => {\r\n\t\tlocalStorage.removeItem(\"postToken\")\r\n\t\tdispatch({type:\"SET_USER\",payload:{username:\"\",token:\"\"}})\r\n\t}\r\n\r\n\tconst handleMyprofile = () => {\r\n\t\tdispatch({type:\"SET_ONPROFILE\",payload:{name:user.username, id:\"\"}})\r\n\t\thistory.push(\"/profile\")\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"navbar\">\r\n\t\t\t<NavLink exact to=\"/\">\r\n\t\t\t\t<div className=\"logo\" >SOCIAL POSTER</div>\r\n\t\t\t</NavLink>\r\n\t\t\t<div className=\"buttonBox\" >\r\n\t\t\t\t{\r\n\t\t\t\t\tuser.username!==\"\"?<>\r\n\t\t\t\t\t\t<span onClick={() => handleMyprofile()}>hola {user.username}</span>\r\n\t\t\t\t\t\t<span onClick={() => handleLogout()}>LogOut</span>\r\n\t\t\t\t\t</>:\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<NavLink exact to=\"/login\">\r\n\t\t\t\t\t\t\t<span>Login</span>\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t<NavLink exact to=\"/signup\">\r\n\t\t\t\t\t\t\t<span>Signup</span>\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport {useStore} from '../store/Store'\r\n\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\r\n\tconst {user} = useStore()\r\n\r\n\treturn (\r\n\t\t<Route\r\n\t\t\t{...rest}\r\n\t\t\trender={props => {\r\n\t\t\t\tconst localuser = localStorage.getItem('postToken');\r\n\t\t\t\tif(user.username===\"\" && !localuser) return <Redirect to={{ pathname: '/login' }} />;\r\n\t\t\t\treturn <Component {...props} />;\r\n\t\t\t}}\r\n\t\t/>\r\n\t)\r\n}","import axios from 'axios'\r\n\r\nlet URI = \"http://localhost:4000/api/\"\r\n\r\nexport const fetchApi = async (action, token) => {\r\n\tlet config = {}\r\n\tif(token){\r\n\t\tconfig = {\r\n\t\t\theaders: {\r\n\t\t\t\t\"x-access-token\":token\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tswitch(action.type){\r\n\t\tcase \"GET_ALL_POST\":{\r\n\t\t\tlet res = await axios.get(URI + \"post\", config)\r\n\t\t\treturn res.data\r\n\t\t}\r\n\t\tcase \"GET_MY_POST\":{\r\n\t\t\tlet res = await axios.get(URI + \"mypost\", config)\r\n\t\t\treturn res.data\r\n\t\t}\r\n\t\tcase \"GET_POST_BY\":{\r\n\t\t\tlet res = await axios.get(URI + \"postbyuser/\" + action.payload, config)\r\n\t\t\treturn res.data\r\n\t\t}\r\n\t\tcase \"GET_ONE_POST\":{\r\n\t\t\tconsole.log(\"getone\",action)\r\n\t\t\tlet res = await axios.get(URI + \"post/\" + action.payload, config)\r\n\t\t\treturn res.data\r\n\t\t}\r\n\t\tcase \"CREATE_POST\":{\r\n\t\t\tlet res = await axios.post(URI + \"post\", action.payload, config)\r\n\t\t\treturn res.data\r\n\t\t}\r\n\t\tcase \"UPDATE_POST\":{\r\n\t\t\tconsole.log(config)\r\n\t\t\tlet res = await axios.put(URI + \"post/\" + action.payload.id, {content:action.payload.content}, config)\r\n\t\t\treturn res.data\r\n\t\t}\r\n\t\tcase \"DELETE_POST\":{\r\n\t\t\tlet res = await axios.delete(URI + \"post/\" + action.payload, config)\r\n\t\t\treturn res.data\r\n\t\t}\r\n\t\tcase \"LIKE\":{\r\n\t\t\tlet res = await axios.get(URI + \"like/\" + action.payload, config)\r\n\t\t\treturn res.data\r\n\t\t}\r\n\t\tcase \"DISLIKE\":{\r\n\t\t\tlet res = await axios.get(URI + \"dislike/\" + action.payload, config)\r\n\t\t\treturn res.data\r\n\t\t}\r\n\t\tcase \"LOGIN\":{\r\n\t\t\tlet res = await axios.post(URI + \"users/login\", action.payload)\r\n\t\t\treturn res.data\r\n\t\t}\r\n\t\tcase \"SIGNUP\":{\r\n\t\t\tlet res = await axios.post(URI + \"users/signup\", action.payload)\r\n\t\t\treturn res.data\r\n\t\t}\r\n\t}\r\n}","import React, {useState, useEffect} from 'react'\r\nimport {useStore, useDispatch} from '../store/Store'\r\nimport {fetchApi} from '../Utils/fetchApi'\r\nimport { useHistory } from 'react-router-dom';\r\nimport Star from '@material-ui/icons/Star' \r\nimport Edit from '@material-ui/icons/Edit' \r\nimport Delete from '@material-ui/icons/Delete' \r\nimport StarBorderOutlined from '@material-ui/icons/StarBorderOutlined' \r\n\r\n\r\nexport const Post = ({ content, postname, id, like, index }) => {\r\n\tconst [liked, setLiked] = useState(false)\r\n\tconst {user, post, onEdit} = useStore()\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst history = useHistory()\r\n\r\n\tconst handleDelete = async () => {\r\n\t\tdispatch({type:\"SET_LOADING\"})\r\n\t\tlet newposts = await fetchApi({type:\"DELETE_POST\", payload:id}, user.token)\r\n\t\tdispatch({type:\"SET_POST\", payload:newposts})\r\n\t\tdispatch({type:\"SET_LOADING\"})\r\n\t}\r\n\r\n\tconst handleEdit = async () => {\r\n\t\tdispatch({type:\"SET_ONEDIT\",payload:id})\r\n\t}\r\n\r\n\tconst handleLike = async () => {\r\n\t\tdispatch({type:\"SET_LOADING\"})\r\n\t\tif(!liked){\r\n\t\t\tlet newposts = await fetchApi({type:\"LIKE\", payload:id}, user.token)\r\n\t\t\tdispatch({type:\"SET_POST\", payload:newposts})\r\n\t\t\tdispatch({type:\"SET_LOADING\"})\r\n\t\t}\r\n\t\tif(liked){\r\n\t\t\tlet newposts = await fetchApi({type:\"DISLIKE\", payload:id}, user.token)\r\n\t\t\tdispatch({type:\"SET_POST\", payload:newposts})\r\n\t\t\tdispatch({type:\"SET_LOADING\"})\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleProfile = () => {\r\n\t\tdispatch({type:\"SET_ONPROFILE\", payload:{id:post[index].username._id, name:postname}})\r\n\t\thistory.push(\"/profile\")\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif(like.some(a => a===user.username)){\r\n\t\t\tsetLiked(true)\r\n\t\t}\r\n\t\tif(!like.some(a => a===user.username)){\r\n\t\t\tsetLiked(false)\r\n\t\t}\r\n\t},[post])\r\n\r\n\treturn (\r\n\t\t<div className=\"card\">\r\n\t\t\t<div className=\"cardHeader\">\r\n\t\t\t<div className=\"nameContent\">\r\n\t\t\t\t<div className=\"foto\"></div>\r\n\t\t\t\t<div className=\"name\" onClick={() => handleProfile()}>{postname}</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"btnCont\">\r\n\t\t\t{\r\n\t\t\t\tpostname===user.username?<>\r\n\t\t\t\t<button onClick={() => handleDelete()}><Delete/></button>\r\n\t\t\t\t<button onClick={() => handleEdit()}><Edit/></button>\r\n\t\t\t\t</>:\r\n\t\t\t\t<>\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"cardContent\">\r\n\t\t\t\t<div className=\"content\">{content}</div>\r\n\t\t\t\t<div className={liked?\"liked\":\"like\"}>\r\n\t\t\t\t\t<button onClick={() => handleLike()}>{!liked?<StarBorderOutlined/>:<Star/>}</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React,{useState, useEffect} from 'react';\r\nimport {fetchApi} from '../Utils/fetchApi'\r\nimport {useStore, useDispatch} from '../store/Store'\r\nimport {Post} from './Post'\r\n\r\nexport const Profile = () => {\r\n\tconst [profile, setProfile] = useState(\"\")\r\n\r\n\tconst {post, user, onProfile} = useStore()\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst getmypost = async () => {\r\n\t\tlet posts = await fetchApi({type:\"GET_MY_POST\"}, user.token)\r\n\t\tdispatch({type:\"SET_POST\", payload:posts})\r\n\t}\r\n\r\n\tconst getpost = async () => {\r\n\t\tlet posts = await fetchApi({type:\"GET_POST_BY\", payload:onProfile.id}, user.token)\r\n\t\tdispatch({type:\"SET_POST\", payload:posts})\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif(onProfile.name===\"\"){\r\n\t\t\tsetProfile(user.username)\r\n\t\t\tgetmypost()\r\n\t\t}\r\n\t\tif(onProfile.name===user.username){\t\t\t\r\n\t\t\tsetProfile(user.username)\r\n\t\t\tgetmypost()\r\n\t\t}\r\n\t\tif(onProfile.name!==user.username && onProfile.name!==\"\"){\r\n\t\t\tsetProfile(onProfile.name)\r\n\t\t\tgetpost()\r\n\t\t}\r\n\t\tconsole.log(profile)\r\n\t},[user])\r\n\r\n\treturn (\r\n\t\t<div className=\"home\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"profile\">\r\n\t\t\t\t\t<div className=\"pic\"></div>\r\n\t\t\t\t\t<div className=\"detail\">\r\n\t\t\t\t\t\t<div className=\"label\">Username:</div>\r\n\t\t\t\t\t\t<div className=\"name\">{profile}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"title\">{onProfile.name===user.username?\"My Posts\":\"Post\"}</div>\r\n\t\t\t\t\t<div className=\"cardContain\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpost.length===0?\r\n\t\t\t\t\t\t<h2>No post</h2>:\r\n\t\t\t\t\t\tpost.map((a,i) => (\r\n\t\t\t\t\t\t\t<Post \r\n\t\t\t\t\t\t\t\tkey={a._id} \r\n\t\t\t\t\t\t\t\tcontent={a.content} \r\n\t\t\t\t\t\t\t\tpostname={a.username.username} \r\n\t\t\t\t\t\t\t\tid={a._id}\r\n\t\t\t\t\t\t\t\tlike={a.like}\r\n\t\t\t\t\t\t\t\tindex={i} \r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React, {useState, useEffect} from 'react'\r\nimport {fetchApi} from '../Utils/fetchApi'\r\nimport {useStore, useDispatch} from '../store/Store'\r\n\r\n\r\nexport const FormPost = () => {\r\n\tconst [form, setForm] = useState(\"\")\r\n\r\n\tconst {user, onEdit} = useStore()\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst setPostToEdit = async () => {\r\n\t\tdispatch({type:\"SET_LOADING\"})\r\n\t\tlet postToEdit = await fetchApi({type:\"GET_ONE_POST\", payload:onEdit}, user.token)\r\n\t\tsetForm(postToEdit.content)\r\n\t\tdispatch({type:\"SET_LOADING\"})\r\n\t}\r\n\r\n\tconst handleCreate = async () => {\r\n\t\tdispatch({type:\"SET_LOADING\"})\r\n\t\tif(onEdit===\"\"){\r\n\t\t\tlet newpost = await fetchApi({type:\"CREATE_POST\", payload:{content:form}}, user.token)\r\n\t\t\tdispatch({type:\"SET_POST\",payload:newpost})\r\n\t\t\tsetForm(\"\")\r\n\t\t\tdispatch({type:\"SET_LOADING\"})\r\n\t\t}\r\n\t\tif(onEdit!==\"\"){\r\n\t\t\tlet newpost = await fetchApi({type:\"UPDATE_POST\",payload:{id:onEdit,content:form}}, user.token)\r\n\t\t\tdispatch({type:\"SET_POST\", payload:newpost})\r\n\t\t\tsetForm(\"\")\r\n\t\t\tdispatch({type:\"SET_ONEDIT\",payload:\"\"})\r\n\t\t\tdispatch({type:\"SET_LOADING\"})\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif(onEdit!==\"\"){\r\n\t\t\tsetPostToEdit()\r\n\t\t}\r\n\t\tif(onEdit===\"\"){\r\n\t\t\tsetForm(\"\")\r\n\t\t}\r\n\t},[onEdit])\r\n\r\n\treturn (\r\n\t\t<div className=\"formPost\">\r\n\t\t\t<input name=\"content\" value={form} onChange={(e) => setForm(e.target.value)} placeholder=\"Write a Post\"/>\r\n\t\t\t<button onClick={() => handleCreate()} >Post</button>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react'\r\n\r\nexport const Loading = () =>{\r\n\treturn (\r\n\t\t<div className=\"loadingCont\">\r\n\t\t\t<div className=\"loading\"></div>\r\n\t\t</div>\r\n\t)\r\n}","import React, {useState, useEffect} from 'react'\r\nimport {Post} from './Post'\r\nimport {FormPost} from './FormPost'\r\nimport {Loading} from './Loading'\r\nimport {fetchApi} from '../Utils/fetchApi'\r\nimport {useStore, useDispatch} from '../store/Store'\r\n\r\nexport const Home = () => {\r\n\tconst [form, setForm] = useState(\"\")\r\n\r\n\tconst {post, user, loading} = useStore()\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst getpost = async () => {\r\n\t\tlet posts = await fetchApi({type:\"GET_ALL_POST\"}, user.token)\r\n\t\tdispatch({type:\"SET_POST\", payload:posts})\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch({type:\"SET_LOADING\"})\r\n\t\tgetpost()\r\n\t\tdispatch({type:\"SET_LOADING\"})\r\n\t},[user])\r\n\r\n\treturn (\r\n\t\t<div className=\"home\">\r\n\t\t\t{loading?<Loading/>:<></>}\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<FormPost/>\r\n\t\t\t\t<div className=\"cardContain\">\r\n\t\t\t\t{\r\n\t\t\t\t\tpost.length===0?\r\n\t\t\t\t\t<h2>No post</h2>:\r\n\t\t\t\t\tpost.map((a,i) => (\r\n\t\t\t\t\t\t<Post \r\n\t\t\t\t\t\t\tkey={a._id} \r\n\t\t\t\t\t\t\tcontent={a.content} \r\n\t\t\t\t\t\t\tpostname={a.username.username} \r\n\t\t\t\t\t\t\tid={a._id}\r\n\t\t\t\t\t\t\tlike={a.like}\r\n\t\t\t\t\t\t\tindex={i} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React ,{useState} from 'react';\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom';\r\nimport {useStore, useDispatch} from '../store/Store'\r\nimport {fetchApi} from '../Utils/fetchApi'\r\n\r\n\r\nexport const Login = () => {\r\n\tconst [formLogin, setFormLogin] = useState({username:\"\",password:\"\"})\r\n\r\n\tconst {user} = useStore()\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst history = useHistory()\r\n\r\n\tconst handleChange = (e) =>{\r\n\t\tlet newForm = {\r\n\t\t\t...formLogin,\r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t}\r\n\t\tsetFormLogin(newForm)\t\r\n\t}\r\n\r\n\tconst handleLogin = async (data) => {\r\n\t\tdispatch({type:\"SET_LOADING\"})\r\n\t\tif(formLogin.username===\"\"){\r\n\t\t\treturn dispatch({type:\"SET_ERROR\",payload:\"debe ingresar el Username\"})\r\n\t\t}\r\n\t\tif(formLogin.password===\"\"){\r\n\t\t\treturn dispatch({type:\"SET_ERROR\",payload:\"debe ingresar el Password\"})\r\n\t\t}\r\n\t\tconst res = await fetchApi({type:\"LOGIN\",payload:data})\r\n\t\tif(res.message){\r\n\t\t\t//return setError(res.message)\r\n\t\t}\r\n\t\tif(res){\r\n\t\t\tlocalStorage.setItem(\"postToken\", JSON.stringify({username:data.username,token:res.token}))\r\n\t\t\tdispatch({type:\"SET_USER\",payload:{ username:data.username, token:res.token }})\r\n\t\t\tdispatch({type:\"SET_LOADING\"})\r\n\t\t\thistory.push(\"/\")\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"home\">\r\n\t\t\t<div className=\"form\">\r\n\t\t\t\t<div className=\"formHeader\" >Sign In</div>\r\n\t\t\t\t<div className=\"content\" >\r\n\t\t\t\t\t<input placeholder=\"Username\" value={formLogin.username} name=\"username\" onChange={handleChange} />\r\n\t\t\t\t\t<input placeholder=\"Password\" value={formLogin.password} name=\"password\" onChange={handleChange} type=\"password\"/>\r\n\t\t\t\t\t<button onClick={() => handleLogin(formLogin)} >Login</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React ,{useState} from 'react';\r\nimport axios from 'axios'\r\nimport {useStore, useDispatch} from '../store/Store'\r\nimport {fetchApi} from '../Utils/fetchApi'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const Signup = () => {\r\n\tconst [formSignup, setFormSignup] = useState({username:\"\",password:\"\",passwordC:\"\"})\r\n\r\n\tconst {user} = useStore()\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst history = useHistory()\r\n\r\n\tconst handleChange = (e) =>{\r\n\t\tlet newForm = {\r\n\t\t\t...formSignup,\r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t}\r\n\t\tsetFormSignup(newForm)\t\r\n\t}\r\n\r\n\tconst handleSignup = async (data) => {\r\n\t\tdispatch({type:\"SET_LOADING\"})\r\n\t\tif(formSignup.username===\"\"){\r\n\t\t\treturn dispatch({type:\"SET_ERROR\",parload:\"debe ingresar el Username\"})\r\n\t\t}\r\n\t\tif(formSignup.password===\"\"){\r\n\t\t\treturn dispatch({type:\"SET_ERROR\",parload:\"debe ingresar el Password\"})\r\n\t\t}\r\n\t\tif(formSignup.passwordC===\"\"){\r\n\t\t\treturn dispatch({type:\"SET_ERROR\",parload:\"debe confirmar el password\"})\r\n\t\t}\r\n\t\tif(formSignup.password!==formSignup.passwordC){\r\n\t\t\treturn dispatch({type:\"SET_ERROR\",parload:\"las contraseñas no coinciden\"})\r\n\t\t}\r\n\t\ttry{\r\n\t\t\tconst res = await fetchApi({type:\"SIGNUP\", payload:data})\r\n\t\t\tif(res){\r\n\t\t\t\t//setError(\"\")\r\n\t\t\t\tconsole.log(res)\r\n\t\t\t\tlocalStorage.setItem(\"postToken\", JSON.stringify({ username:data.username, token:res.token }))\r\n\t\t\t\tdispatch({type:\"SET_USER\",payload:{ username:data.username, token:res.token }})\r\n\t\t\t\tdispatch({type:\"SET_LOADING\"})\r\n\t\t\t\thistory.push(\"/\")\r\n\t\t\t}\r\n\t\t}catch(error){\r\n\t\t\tconsole.log(error)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"home\">\r\n\t\t\t<div className=\"form\">\r\n\t\t\t\t<div className=\"formHeader\" >Sign Up</div>\r\n\t\t\t\t<div className=\"content\" >\r\n\t\t\t\t\t<input placeholder=\"Username\" name=\"username\" value={formSignup.username} onChange={handleChange}/>\r\n\t\t\t\t\t<input placeholder=\"Password\" name=\"password\" value={formSignup.password} onChange={handleChange} type=\"password\"/>\r\n\t\t\t\t\t<input placeholder=\"Confirm Password\" name=\"passwordC\" value={formSignup.paswordC} onChange={handleChange} type=\"password\"/>\r\n\t\t\t\t\t<button onClick={() => handleSignup(formSignup)} >Login</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport {StoreProvider} from './store/Store'\nimport {Navbar} from './Components/Navbar'\nimport {PrivateRoute} from './Components/PrivateRoute'\nimport {Profile} from './Components/Profile'\nimport {Home} from './Components/Home'\nimport {Login} from './Pages/Login'\nimport {Signup} from './Pages/Signup'\n\n\nfunction App() {\n  return (\n    <StoreProvider>\n      <Router>\n        <Navbar/>\n        <Switch>\n          <Route path=\"/signup\" component={Signup}/>\n          <Route path=\"/login\" component={Login}/>\n          <PrivateRoute path=\"/profile\" component={Profile}/>\n          <PrivateRoute path=\"/\" component={Home}/>\n        </Switch>\n      </Router>\n    </StoreProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}